/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { MdbCardFooterComponent } from './mdb-card-footer.component';
import { MdbCardTitleComponent } from './mdb-card-title.component';
import { MdbCardTextComponent } from './mdb-card-text.component';
import { MdbCardBodyComponent } from './mdb-card-body.component';
import { MdbCardComponent } from './mdb-card.component';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MdbCardImageComponent } from './mdb-card-image.component';
import { MdbCardHeaderComponent } from './mdb-card-header.component';
export class CardsFreeModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return { ngModule: CardsFreeModule, providers: [] };
    }
}
CardsFreeModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [
                    MdbCardComponent,
                    MdbCardBodyComponent,
                    MdbCardImageComponent,
                    MdbCardTextComponent,
                    MdbCardTitleComponent,
                    MdbCardFooterComponent,
                    MdbCardHeaderComponent
                ],
                exports: [
                    MdbCardComponent,
                    MdbCardBodyComponent,
                    MdbCardImageComponent,
                    MdbCardTextComponent,
                    MdbCardTitleComponent,
                    MdbCardFooterComponent,
                    MdbCardHeaderComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1ib290c3RyYXAtbWQvIiwic291cmNlcyI6WyJsaWIvY2FyZHMvY2FyZHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDbkUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUF3QnJFLE1BQU0sT0FBTyxlQUFlOzs7O0lBQ2pCLE1BQU0sQ0FBQyxPQUFPO1FBQ2pCLE9BQU8sRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUN4RCxDQUFDOzs7WUF4QkosUUFBUSxTQUFDO2dCQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDdkIsWUFBWSxFQUFFO29CQUNWLGdCQUFnQjtvQkFDaEIsb0JBQW9CO29CQUNwQixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIscUJBQXFCO29CQUNyQixzQkFBc0I7b0JBQ3RCLHNCQUFzQjtpQkFDekI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLGdCQUFnQjtvQkFDaEIsb0JBQW9CO29CQUNwQixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIscUJBQXFCO29CQUNyQixzQkFBc0I7b0JBQ3RCLHNCQUFzQjtpQkFDekI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1kYkNhcmRGb290ZXJDb21wb25lbnQgfSBmcm9tICcuL21kYi1jYXJkLWZvb3Rlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWRiQ2FyZFRpdGxlQ29tcG9uZW50IH0gZnJvbSAnLi9tZGItY2FyZC10aXRsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWRiQ2FyZFRleHRDb21wb25lbnQgfSBmcm9tICcuL21kYi1jYXJkLXRleHQuY29tcG9uZW50JztcbmltcG9ydCB7IE1kYkNhcmRCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi9tZGItY2FyZC1ib2R5LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZGJDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9tZGItY2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNZGJDYXJkSW1hZ2VDb21wb25lbnQgfSBmcm9tICcuL21kYi1jYXJkLWltYWdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZGJDYXJkSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9tZGItY2FyZC1oZWFkZXIuY29tcG9uZW50JztcblxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBNZGJDYXJkQ29tcG9uZW50LFxuICAgICAgICBNZGJDYXJkQm9keUNvbXBvbmVudCxcbiAgICAgICAgTWRiQ2FyZEltYWdlQ29tcG9uZW50LFxuICAgICAgICBNZGJDYXJkVGV4dENvbXBvbmVudCxcbiAgICAgICAgTWRiQ2FyZFRpdGxlQ29tcG9uZW50LFxuICAgICAgICBNZGJDYXJkRm9vdGVyQ29tcG9uZW50LFxuICAgICAgICBNZGJDYXJkSGVhZGVyQ29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIE1kYkNhcmRDb21wb25lbnQsXG4gICAgICAgIE1kYkNhcmRCb2R5Q29tcG9uZW50LFxuICAgICAgICBNZGJDYXJkSW1hZ2VDb21wb25lbnQsXG4gICAgICAgIE1kYkNhcmRUZXh0Q29tcG9uZW50LFxuICAgICAgICBNZGJDYXJkVGl0bGVDb21wb25lbnQsXG4gICAgICAgIE1kYkNhcmRGb290ZXJDb21wb25lbnQsXG4gICAgICAgIE1kYkNhcmRIZWFkZXJDb21wb25lbnRcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIENhcmRzRnJlZU1vZHVsZSB7XG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4geyBuZ01vZHVsZTogQ2FyZHNGcmVlTW9kdWxlLCBwcm92aWRlcnM6IFtdIH07XG4gICAgfVxufVxuIl19